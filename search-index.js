var searchIndex = new Map(JSON.parse('[\
["libpulse_binding_async",{"doc":"An <code>async</code>/<code>await</code> wrapper for <code>libpulse-binding</code> intended to …","t":"CCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNN","n":["context","operation","Context","borrow","borrow_mut","connect","disconnect","exit_daemon","from","get_index","get_protocol_version","get_server","get_server_protocol_version","get_state","get_tile_size","into","is_local","is_pending","new","new_with_proplist","play_sample","play_sample_with_proplist","proplist_remove","proplist_update","remove_sample","set_default_sink","set_default_source","set_name","try_from","try_into","type_id","Operation","borrow","borrow_mut","from","from","into","into_future","poll","try_from","try_into","type_id"],"q":[[0,"libpulse_binding_async"],[2,"libpulse_binding_async::context"],[31,"libpulse_binding_async::operation"],[42,"core::option"],[43,"libpulse_binding::context"],[44,"libpulse_binding::def"],[45,"libpulse_binding::error"],[46,"core::result"],[47,"alloc::string"],[48,"libpulse_binding::context"],[49,"libpulse_binding::mainloop::api"],[50,"libpulse_binding::proplist"],[51,"libpulse_binding::volume"],[52,"libpulse_sys::proplist"],[53,"core::any"],[54,"libpulse_binding::operation"],[55,"core::marker"],[56,"core::pin"],[57,"core::task::wake"],[58,"core::task::poll"]],"d":["Connection context","Asyncronous operations","An opaque connection context to a daemon","","","Connects the context to the specified server.","Terminates the context connection immediately","Tells the daemon to exit.","Returns the argument unchanged.","Gets the client index this context is identified in the …","Gets the protocol version of the library","Gets the name of the server this context is connected to.","Gets the protocal version of the server this context is …","Gets the current context status.","Gets the optimal block size for passing around audio …","Calls <code>U::from(self)</code>.","Checks if this is a connection to a local daemon.","Checks if some data is pending to be written to the …","Constructs a new connection context.","Constructs a new connection context with the given client …","Plays a sample from the sample cache to the specified …","Plays a sample from the sample cache to the specified …","Removes the entries with the given names from the client’…","Updates the property list of the client, adding new …","Removes a sample from the sample cache.","Set the default sink to the one with the given name.","Set the default source to the one with the given name.","Sets a different application name for context on the …","","","","Asyncronous operation object, representing work being …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,22,22,22,22,22,22,22,22,22,22],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[2]],4,[3,[5]]],[[8,[6,7]]]],[1,6],[1,9],[-1,-1,[]],[1,[[3,[10]]]],[1,10],[1,[[3,[11]]]],[1,[[3,[10]]]],[1,12],[[1,[3,[13]]],[[3,[14]]]],[-1,-2,[],[]],[1,[[3,[9]]]],[1,9],[[-1,2],[[3,[1]]],15],[[-1,2,16],[[3,[1]]],15],[[1,2,[3,[2]],[3,[17]]],[[8,[6,7]]]],[[1,2,[3,[2]],[3,[17]],16],[[8,[6,7]]]],[[1,[18,[2]]],[[8,[6,7]]]],[[1,19,16],[[8,[6,7]]]],[[1,2],[[8,[6,7]]]],[[1,2],[[8,[6,7]]]],[[1,2],[[8,[6,7]]]],[[1,2],[[8,[6,7]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[21,[-1]]],[[22,[-1]]],23],[-1,-2,[],[]],[-1,[],[]],[[[24,[[22,[-1]]]],25],[[26,[-2]]],23,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,20,[]]],"c":[],"p":[[5,"Context",2],[1,"str"],[6,"Option",42],[5,"FlagSet",43],[5,"SpawnApi",44],[1,"tuple"],[5,"PAErr",45],[6,"Result",46],[1,"bool"],[1,"u32"],[5,"String",47],[6,"State",43],[5,"Spec",48],[1,"usize"],[10,"Mainloop",49],[5,"Proplist",50],[5,"Volume",51],[1,"slice"],[6,"pa_update_mode_t",52],[5,"TypeId",53],[5,"Operation",54],[5,"Operation",31],[10,"Sized",55],[5,"Pin",56],[5,"Context",57],[6,"Poll",58]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
